* Example 1- Carbon Dioxide

Step I-DFT caculation & plot electron density with isosurface

#+BEGIN_SRC python
from jasp import *
from enthought.mayavi import mlab
from ase.data import vdw_radii
from ase.data.colors import cpk_colors
from ase.data.molecules import molecule
from ase import Atom,Atoms

# define molecules and atoms' positions
atoms=Atoms([Atom('C',[4.0,4.0,4.0]),
             Atom('O',[4.0,4.0,2.83]),
             Atom('O',[4.0,4.0,5.17])],
             cell=(8,8,8))
# center the molecule to get a better view
atoms.center()


with jasp('molecules/project1/co2',
           xc='PBE',
           encut=250,
           ismear=0,
           ibrion=2,
           nsw=10,
           atoms=atoms) as calc:
     atoms = calc.get_atoms()
     x,y,z,cd=calc.get_charge_density()

# make a white figure
mlab.figure(1,bgcolor=(1,1,1))

# plot the atoms as spheres
for atom in atoms:
    mlab.points3d(atom.x,
                  atom.y,
                  atom.z,
                  scale_factor=vdw_radii[atom.number]/5.,
                  resolution=20,
                  color=tuple(cpk_colors[atom.number]),
                  scale_mode='none')
# draw the unit cell
a1,a2,a3=atoms.get_cell()
origin=[0,0,0]
cell_matrix=[[origin, a1],
            [origin, a2],
            [origin, a3],
            [a1, a1+a2],
            [a1, a1+a3],
            [a2, a2+a1],
            [a2, a2+a3],
            [a3, a1+a3],
            [a3, a2+a3],
            [a1+a2,a1+a2+a3],
            [a2+a3,a1+a2+a3],
            [a1+a3,a1+a3+a2]]

for p1,p2 in cell_matrix:
    mlab.plot3d([p1[0],p2[0]],
                [p1[1],p2[1]],
                [p1[2],p2[2]],
                tube_radius=0.002)

# now plot the density
mlab.contour3d(x,y,z,cd)
mlab.view(azimuth=-90,elevation=90,distance='auto')

mlab.savefig('images/CO2-cd.png')
mlab.show()
#+END_SRC

#+RESULTS:

Step II Plot the electron fog
#+BEGIN_SRC python
import numpy as np
from mayavi import mlab

mlab.figure(1, bgcolor=(0, 0, 0), size=(350, 350))
mlab.clf()

# The position of the atoms
# 64 is the dimension of electron density matrix later after reshaped.
# 8 is the size of the cell.
atoms_x = np.array([4.0, 4.0, 4.0])*64/8
atoms_y = np.array([4.0, 4.0, 4.0])*64/8
atoms_z = np.array([4.0, 2.83,5.17])*64/8
# plot the atoms as spheres
C = mlab.points3d(atoms_x[:1], atoms_y[:1], atoms_z[:1],
                  scale_factor=5,
                  resolution=20,
                  color=(1, 0, 0),
                  scale_mode='none')

O = mlab.points3d(atoms_x[1:-1], atoms_y[1:-1], atoms_z[1:-1],
                   scale_factor=3,
                   resolution=20,
                   color=(1, 1, 1),
                   scale_mode='none')

O = mlab.points3d(atoms_x[-1:], atoms_y[-1:], atoms_z[-1:],
                   scale_factor=3,
                   resolution=20,
                   color=(1, 1, 1),
                   scale_mode='none')

# The bounds between the atoms, we use the scalar information to give
# color
mlab.plot3d(atoms_x, atoms_y, atoms_z, [2, 1, 1],
            tube_radius=0.4, colormap='Reds')

# Import the CHG file which includes the electron density
# Load the data, we need to remove the first 12 lines and the '\n'
str = ' '.join(file('CHG').readlines()[13:])
data = np.fromstring(str, sep=' ')
print data.shape
data.shape = (64, 64, 64)

# Plot the electron density
source = mlab.pipeline.scalar_field(data.T)
min = data.min()
max = data.max()
vol = mlab.pipeline.volume(source, vmin=min+0*(max-min),
                                   vmax=min+1*(max-min))

mlab.view(azimuth=-90,elevation=90,distance='auto')

mlab.show()
#+END_SRC




* Example 2- Ethane
#+BEGIN_SRC python

import numpy as np
from mayavi import mlab
from ase.data import vdw_radii
from ase.data.colors import cpk_colors
from ase.data.molecules import molecule
from jasp import *

mlab.figure(1, bgcolor=(0, 0, 0), size=(350, 350))
mlab.clf()

atoms=molecule('C2H6')
atoms.center(vacuum=4)

with jasp('molecules/project1/C2H6',
           xc='PBE',
           encut=250,
           ismear=0,
           ibrion=2,
           nsw=10,
           atoms=atoms) as calc:
     atoms = calc.get_atoms()
     e1=atoms.get_potential_energy()
     x,y,z,cd=calc.get_charge_density()
# creat atom_x_0 atom_y_0 atom_z_0 to store the coordinates of the atoms
atoms_x=[]
atoms_y=[]
atoms_z=[]

for atom in atoms:
    atoms_x.append(atom.x)
    atoms_y.append(atom.y)
    atoms_z.append(atom.z)

# plot atoms as spheres
for i,atom in enumerate(atoms):
    mlab.points3d(atoms_x[i],
                  atoms_y[i],
                  atoms_z[i],
                  scale_factor=vdw_radii[atom.number]/5,
                  resolution=20,
                  color=tuple(cpk_colors[atom.number]),
                  scale_mode='none')

# Draw the bonds between atoms
# creat bx/y/z, bx/y/z1 to bx/y/z6, to store the coordinates of the atoms which should be connected
bx=[]
by=[]
bz=[]
bx1=[]
by1=[]
bz1=[]
bx2=[]
by2=[]
bz2=[]
bx3=[]
by3=[]
bz3=[]
bx4=[]
by4=[]
bz4=[]
bx5=[]
by5=[]
bz5=[]
bx6=[]
by6=[]
bz6=[]
# Draw the bond between two carbon atoms
for i in [0,1]:
    bx.append(atoms_x[i])
    by.append(atoms_y[i])
    bz.append(atoms_z[i])

mlab.plot3d(bx, by, bz,tube_radius=0.07, colormap='Reds')

# Draw the bonds between Carbon_0 and three hydrogens around it
for i in [0,2]:
    bx1.append(atoms_x[i])
    by1.append(atoms_y[i])
    bz1.append(atoms_z[i])
mlab.plot3d(bx1, by1, bz1,tube_radius=0.07, colormap='Reds')

for i in [0,3]:
    bx2.append(atoms_x[i])
    by2.append(atoms_y[i])
    bz2.append(atoms_z[i])
mlab.plot3d(bx2, by2, bz2,tube_radius=0.07, colormap='Reds')

for i in [0,4]:
    bx3.append(atoms_x[i])
    by3.append(atoms_y[i])
    bz3.append(atoms_z[i])
mlab.plot3d(bx3, by3, bz3,tube_radius=0.07, colormap='Reds')

# Draw the bonds between Carbon_1 and three hydrogens around it
for i in [1,5]:
    bx4.append(atoms_x[i])
    by4.append(atoms_y[i])
    bz4.append(atoms_z[i])
mlab.plot3d(bx4, by4, bz4,tube_radius=0.07, colormap='Reds')

for i in [1,6]:
    bx5.append(atoms_x[i])
    by5.append(atoms_y[i])
    bz5.append(atoms_z[i])
mlab.plot3d(bx5, by5, bz5,tube_radius=0.07, colormap='Reds')

for i in [1,7]:
    bx6.append(atoms_x[i])
    by6.append(atoms_y[i])
    bz6.append(atoms_z[i])
mlab.plot3d(bx6, by6, bz6,tube_radius=0.07, colormap='Reds')

# Draw the electron density
source = mlab.pipeline.scalar_field(x,y,z,cd)
vol = mlab.pipeline.volume(source, vmin=0,
                                   vmax=1)
mlab.savefig('images/C2H6-cd.png')

mlab.view(azimuth=-90,elevation=90,distance='auto')

mlab.show()
#+END_SRC

#+RESULTS


* Example 3- Ethylene
#+BEGIN_SRC python

import numpy as np
from mayavi import mlab
from ase.data import vdw_radii
from ase.data.colors import cpk_colors
from ase.data.molecules import molecule
from jasp import *

mlab.figure(1, bgcolor=(0, 0, 0), size=(350, 350))
mlab.clf()

atoms=molecule('C2H4')
atoms.center(vacuum=3)

with jasp('molecules/project1/C2H4',
           xc='PBE',
           encut=250,
           ismear=0,
           ibrion=2,
           nsw=10,
           atoms=atoms) as calc:
     atoms = calc.get_atoms()
     e1=atoms.get_potential_energy()
     x,y,z,cd=calc.get_charge_density()
# creat atom_x_0 atom_y_0 atom_z_0 to store the coordinates of the atoms
atoms_x=[]
atoms_y=[]
atoms_z=[]

for atom in atoms:
    atoms_x.append(atom.x)
    atoms_y.append(atom.y)
    atoms_z.append(atom.z)

for i,atom in enumerate(atoms):
    mlab.points3d(atoms_x[i],
                  atoms_y[i],
                  atoms_z[i],
                  scale_factor=vdw_radii[atom.number]/5,
                  resolution=20,
                  color=tuple(cpk_colors[atom.number]),
                  scale_mode='none')

# Draw the bonds between atoms
# creat bx/y/z, bx/y/z1 to bx/y/z4, to store the coordinates of the atoms which should be connected
bx=[]
by=[]
bz=[]
bx1=[]
by1=[]
bz1=[]
bx2=[]
by2=[]
bz2=[]
bx3=[]
by3=[]
bz3=[]
bx4=[]
by4=[]
bz4=[]
# Draw the bond between two carbon atoms
for i in [0,1]:
    bx.append(atoms_x[i])
    by.append(atoms_y[i])
    bz.append(atoms_z[i])

mlab.plot3d(bx, by, bz,tube_radius=0.07, colormap='Reds')

# Draw the bonds between Carbon_0 and two hydrogens around it
for i in [0,2]:
    bx1.append(atoms_x[i])
    by1.append(atoms_y[i])
    bz1.append(atoms_z[i])
mlab.plot3d(bx1, by1, bz1,tube_radius=0.07, colormap='Reds')

for i in [0,3]:
    bx2.append(atoms_x[i])
    by2.append(atoms_y[i])
    bz2.append(atoms_z[i])
mlab.plot3d(bx2, by2, bz2,tube_radius=0.07, colormap='Reds')

# Draw the bonds between Carbon_1 and two hydrogens around it
for i in [1,4]:
    bx3.append(atoms_x[i])
    by3.append(atoms_y[i])
    bz3.append(atoms_z[i])
mlab.plot3d(bx3, by3, bz3,tube_radius=0.07, colormap='Reds')

for i in [1,5]:
    bx4.append(atoms_x[i])
    by4.append(atoms_y[i])
    bz4.append(atoms_z[i])
mlab.plot3d(bx4, by4, bz4,tube_radius=0.07, colormap='Reds')

source = mlab.pipeline.scalar_field(x,y,z,cd)
vol = mlab.pipeline.volume(source, vmin=0,
                                   vmax=1)
mlab.savefig('images/C2H4-cd.png')

mlab.view(azimuth=-90,elevation=90,distance='auto')

mlab.show()
#+END_SRC

#+RESULTS:
